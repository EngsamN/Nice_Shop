name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Fail the job if the Quality Gate status is not PASSED
      # - name: Fail Job if Quality Gate Failed
      #   if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status != 'PASSED'
      #   run: exit 1

      # - name: Show SonarQube Quality Gate Status
      #   run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
    
      # Debugging step to print all outputs from sonarqube-quality-gate-check
      - name: Print Quality Gate Outputs
        run: |
          echo "Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
          echo "All Outputs: ${{ toJSON(steps.sonarqube-quality-gate-check.outputs) }}"

      # Fail the job if the Quality Gate status is not PASSED
      - name: Fail Job if Quality Gate Failed
        if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status != 'PASSED'
        run: exit 1

      - name: Show SonarQube Quality Gate Status
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"