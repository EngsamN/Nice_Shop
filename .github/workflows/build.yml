name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        id: sonarqube-quality-gate-check
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Debugging step to print the contents of the report-task.txt file
      - name: Print Report Task File
        run: cat .scannerwork/report-task.txt

      # Fetch and check the Quality Gate result
      - name: Check Quality Gate Result
        run: |
          if [ -f .scannerwork/report-task.txt ]; then
            CE_TASK_URL=$(grep -oP '(?<=ceTaskUrl=).*' .scannerwork/report-task.txt)
            echo "CE Task URL: $CE_TASK_URL"
            TASK_RESPONSE=$(curl -s "$CE_TASK_URL")
            echo "Task Response: $TASK_RESPONSE"
            TASK_STATUS=$(echo "$TASK_RESPONSE" | jq -r '.task.status')
            echo "Task Status: $TASK_STATUS"
            if [ "$TASK_STATUS" == "SUCCESS" ]; then
              ANALYSIS_ID=$(echo "$TASK_RESPONSE" | jq -r '.task.analysisId')
              echo "Analysis ID: $ANALYSIS_ID"
              QUALITY_GATE_RESPONSE=$(curl -s "$SONAR_HOST_URL/api/qualitygates/project_status?analysisId=$ANALYSIS_ID")
              echo "Quality Gate Response: $QUALITY_GATE_RESPONSE"
              QUALITY_GATE_STATUS=$(echo "$QUALITY_GATE_RESPONSE" | jq -r '.projectStatus.status')
              echo "Quality Gate Status: $QUALITY_GATE_STATUS"
              if [ "$QUALITY_GATE_STATUS" != "OK" ]; then
                exit 1
              fi
            else
              echo "Task status is not SUCCESS: $TASK_STATUS"
              exit 1
            fi
          else
            echo "report-task.txt file not found."
            exit 1
          fi

      - name: Show SonarQube Quality Gate Status
        run: echo "The Quality Gate status is $QUALITY_GATE_STATUS"
